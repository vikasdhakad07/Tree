Method 01: Binary Tree Preorder Traversal


class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
       List<Integer> li=new ArrayList<>();
       preorder(root, li);
       return li;
    }

public void preorder(TreeNode root, List<Integer> li){
     if(root==null){
            return;
        }

        li.add(root.val);
        preorder(root.left, li);
        preorder(root.right, li);
}
}


Method 02: Binary Tree Preorder Traversal


 List<Integer> preorder=new ArrayList<>();
        if(root==null){
            return preorder;
        }
        Stack<TreeNode> st=new Stack<>();
        st.push(root);
        while(!st.isEmpty()){
            root=st.pop();
            preorder.add(root.val);
        
            if(root.right!=null){
                st.push(root.right);
            }

              if(root.left!=null){
                st.push(root.left);
            }
        }
        return preorder;
